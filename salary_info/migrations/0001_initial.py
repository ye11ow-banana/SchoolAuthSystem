# Generated by Django 4.1.3 on 2022-12-05 13:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CookTypeSalaryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_increase', models.PositiveSmallIntegerField(default=2000, verbose_name='Salary increase for chief cook')),
            ],
            options={
                'verbose_name': 'cook salary info',
                'verbose_name_plural': 'cook salary infos',
                'db_table': 'cook_salary_info',
            },
        ),
        migrations.CreateModel(
            name='SalaryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_id', models.PositiveSmallIntegerField(verbose_name='Worker id')),
                ('income_amount', models.PositiveIntegerField(default=0, verbose_name='Amount of income for period')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Date that starts period')),
                ('end_date', models.DateField(auto_now=True, verbose_name='Date that ends period')),
                ('saved_state', models.JSONField(verbose_name='Saving state of fields of worker model and its type')),
            ],
            options={
                'verbose_name': 'salary history',
                'verbose_name_plural': 'salary histories',
                'db_table': 'salary_history',
            },
        ),
        migrations.CreateModel(
            name='TeacherTypeSalaryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_increase', models.PositiveSmallIntegerField(default=150, verbose_name='Salary increase for course')),
                ('service_years', models.PositiveSmallIntegerField(default=3, verbose_name='Years of service to increase salary')),
                ('service_years_increase', models.PositiveSmallIntegerField(default=10, verbose_name='Percentage of salary increase for years of service')),
                ('classroom_increase', models.PositiveSmallIntegerField(default=10, verbose_name='Percentage of salary increase for having classroom')),
                ('seniors_group_increase', models.PositiveSmallIntegerField(default=25, verbose_name='Percentage of salary increase for supervise seniors group')),
                ('juniors_group_increase', models.PositiveSmallIntegerField(default=20, verbose_name='Percentage of salary increase for supervise juniors group')),
                ('checking_notebooks_increase', models.PositiveSmallIntegerField(default=10, verbose_name='Percentage of salary increase for checking notebooks')),
                ('students_number_needed_for_increase_for_checking_notebooks', models.PositiveSmallIntegerField(default=12, verbose_name='Number of students needed for salary increase for checking notebooks')),
                ('checking_notebooks_subjects', models.ManyToManyField(to='students.subject', verbose_name='Subjects for salary increase for checking notebooks')),
            ],
            options={
                'verbose_name': 'teacher salary info',
                'verbose_name_plural': 'teacher salary infos',
                'db_table': 'teacher_salary_info',
            },
        ),
        migrations.CreateModel(
            name='WorkerSalaryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('object_id', models.PositiveIntegerField(null=True, verbose_name='Id of extension type. E.g. id of `TeacherTypeSalaryInfo`')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Salary info extension. Like salary info about a teacher or a cook. Leave blank if this is salary info for a regular employee')),
            ],
            options={
                'verbose_name': 'worker salary info',
                'verbose_name_plural': 'worker salary infos',
                'db_table': 'worker_salary_info',
                'unique_together': {('content_type', 'object_id')},
            },
        ),
    ]
